/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './modules/__root'
import { Route as LangRouteRouteImport } from './modules/$lang/route'
import { Route as IndexRouteImport } from './modules/index'
import { Route as LangIndexRouteImport } from './modules/$lang/index'
import { Route as LangPanelRouteRouteImport } from './modules/$lang/_panel/route'
import { Route as LangAuthRouteRouteImport } from './modules/$lang/_auth/route'
import { Route as LangAuthpagesSignUpRouteImport } from './modules/$lang/_auth/(pages)/sign-up'
import { Route as LangAuthpagesSignInRouteImport } from './modules/$lang/_auth/(pages)/sign-in'
import { Route as LangAuthpagesResetPasswordRouteImport } from './modules/$lang/_auth/(pages)/reset-password'
import { Route as LangAuthpagesOauthRouteImport } from './modules/$lang/_auth/(pages)/oauth'
import { Route as LangAuthpagesForgetPasswordRouteImport } from './modules/$lang/_auth/(pages)/forget-password'
import { Route as LangPanelpagesCustomerDashboardRouteImport } from './modules/$lang/_panel/(pages)/customer/dashboard'
import { Route as LangAuthpagesActivateAccountTokenRouteImport } from './modules/$lang/_auth/(pages)/activate-account.$token'
import { Route as LangPanelpagesCustomerServersIndexRouteImport } from './modules/$lang/_panel/(pages)/customer/servers/index'
import { Route as LangPanelpagesCustomerProfileIndexRouteImport } from './modules/$lang/_panel/(pages)/customer/profile/index'
import { Route as LangPanelpagesAdminOsIndexRouteImport } from './modules/$lang/_panel/(pages)/admin/os/index'
import { Route as LangPanelpagesCustomerProfileReceiptsRouteImport } from './modules/$lang/_panel/(pages)/customer/profile/receipts'
import { Route as LangPanelpagesCustomerProfileBillingsRouteImport } from './modules/$lang/_panel/(pages)/customer/profile/billings'
import { Route as LangPanelpagesAdminOsCreateRouteImport } from './modules/$lang/_panel/(pages)/admin/os/create'
import { Route as LangPanelpagesCustomerServersServerIdBackupRouteImport } from './modules/$lang/_panel/(pages)/customer/servers/$serverId/backup'
import { Route as LangPanelpagesAdminOsOsIdUpdateRouteImport } from './modules/$lang/_panel/(pages)/admin/os/$osId/update'

const LangRouteRoute = LangRouteRouteImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LangIndexRoute = LangIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangRouteRoute,
} as any)
const LangPanelRouteRoute = LangPanelRouteRouteImport.update({
  id: '/_panel',
  getParentRoute: () => LangRouteRoute,
} as any)
const LangAuthRouteRoute = LangAuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => LangRouteRoute,
} as any)
const LangAuthpagesSignUpRoute = LangAuthpagesSignUpRouteImport.update({
  id: '/(pages)/sign-up',
  path: '/sign-up',
  getParentRoute: () => LangAuthRouteRoute,
} as any)
const LangAuthpagesSignInRoute = LangAuthpagesSignInRouteImport.update({
  id: '/(pages)/sign-in',
  path: '/sign-in',
  getParentRoute: () => LangAuthRouteRoute,
} as any)
const LangAuthpagesResetPasswordRoute =
  LangAuthpagesResetPasswordRouteImport.update({
    id: '/(pages)/reset-password',
    path: '/reset-password',
    getParentRoute: () => LangAuthRouteRoute,
  } as any)
const LangAuthpagesOauthRoute = LangAuthpagesOauthRouteImport.update({
  id: '/(pages)/oauth',
  path: '/oauth',
  getParentRoute: () => LangAuthRouteRoute,
} as any)
const LangAuthpagesForgetPasswordRoute =
  LangAuthpagesForgetPasswordRouteImport.update({
    id: '/(pages)/forget-password',
    path: '/forget-password',
    getParentRoute: () => LangAuthRouteRoute,
  } as any)
const LangPanelpagesCustomerDashboardRoute =
  LangPanelpagesCustomerDashboardRouteImport.update({
    id: '/(pages)/customer/dashboard',
    path: '/customer/dashboard',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangAuthpagesActivateAccountTokenRoute =
  LangAuthpagesActivateAccountTokenRouteImport.update({
    id: '/(pages)/activate-account/$token',
    path: '/activate-account/$token',
    getParentRoute: () => LangAuthRouteRoute,
  } as any)
const LangPanelpagesCustomerServersIndexRoute =
  LangPanelpagesCustomerServersIndexRouteImport.update({
    id: '/(pages)/customer/servers/',
    path: '/customer/servers/',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangPanelpagesCustomerProfileIndexRoute =
  LangPanelpagesCustomerProfileIndexRouteImport.update({
    id: '/(pages)/customer/profile/',
    path: '/customer/profile/',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangPanelpagesAdminOsIndexRoute =
  LangPanelpagesAdminOsIndexRouteImport.update({
    id: '/(pages)/admin/os/',
    path: '/admin/os/',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangPanelpagesCustomerProfileReceiptsRoute =
  LangPanelpagesCustomerProfileReceiptsRouteImport.update({
    id: '/(pages)/customer/profile/receipts',
    path: '/customer/profile/receipts',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangPanelpagesCustomerProfileBillingsRoute =
  LangPanelpagesCustomerProfileBillingsRouteImport.update({
    id: '/(pages)/customer/profile/billings',
    path: '/customer/profile/billings',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangPanelpagesAdminOsCreateRoute =
  LangPanelpagesAdminOsCreateRouteImport.update({
    id: '/(pages)/admin/os/create',
    path: '/admin/os/create',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangPanelpagesCustomerServersServerIdBackupRoute =
  LangPanelpagesCustomerServersServerIdBackupRouteImport.update({
    id: '/(pages)/customer/servers/$serverId/backup',
    path: '/customer/servers/$serverId/backup',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)
const LangPanelpagesAdminOsOsIdUpdateRoute =
  LangPanelpagesAdminOsOsIdUpdateRouteImport.update({
    id: '/(pages)/admin/os/$osId/update',
    path: '/admin/os/$osId/update',
    getParentRoute: () => LangPanelRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$lang': typeof LangPanelRouteRouteWithChildren
  '/$lang/': typeof LangIndexRoute
  '/$lang/forget-password': typeof LangAuthpagesForgetPasswordRoute
  '/$lang/oauth': typeof LangAuthpagesOauthRoute
  '/$lang/reset-password': typeof LangAuthpagesResetPasswordRoute
  '/$lang/sign-in': typeof LangAuthpagesSignInRoute
  '/$lang/sign-up': typeof LangAuthpagesSignUpRoute
  '/$lang/activate-account/$token': typeof LangAuthpagesActivateAccountTokenRoute
  '/$lang/customer/dashboard': typeof LangPanelpagesCustomerDashboardRoute
  '/$lang/admin/os/create': typeof LangPanelpagesAdminOsCreateRoute
  '/$lang/customer/profile/billings': typeof LangPanelpagesCustomerProfileBillingsRoute
  '/$lang/customer/profile/receipts': typeof LangPanelpagesCustomerProfileReceiptsRoute
  '/$lang/admin/os': typeof LangPanelpagesAdminOsIndexRoute
  '/$lang/customer/profile': typeof LangPanelpagesCustomerProfileIndexRoute
  '/$lang/customer/servers': typeof LangPanelpagesCustomerServersIndexRoute
  '/$lang/admin/os/$osId/update': typeof LangPanelpagesAdminOsOsIdUpdateRoute
  '/$lang/customer/servers/$serverId/backup': typeof LangPanelpagesCustomerServersServerIdBackupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$lang': typeof LangIndexRoute
  '/$lang/forget-password': typeof LangAuthpagesForgetPasswordRoute
  '/$lang/oauth': typeof LangAuthpagesOauthRoute
  '/$lang/reset-password': typeof LangAuthpagesResetPasswordRoute
  '/$lang/sign-in': typeof LangAuthpagesSignInRoute
  '/$lang/sign-up': typeof LangAuthpagesSignUpRoute
  '/$lang/activate-account/$token': typeof LangAuthpagesActivateAccountTokenRoute
  '/$lang/customer/dashboard': typeof LangPanelpagesCustomerDashboardRoute
  '/$lang/admin/os/create': typeof LangPanelpagesAdminOsCreateRoute
  '/$lang/customer/profile/billings': typeof LangPanelpagesCustomerProfileBillingsRoute
  '/$lang/customer/profile/receipts': typeof LangPanelpagesCustomerProfileReceiptsRoute
  '/$lang/admin/os': typeof LangPanelpagesAdminOsIndexRoute
  '/$lang/customer/profile': typeof LangPanelpagesCustomerProfileIndexRoute
  '/$lang/customer/servers': typeof LangPanelpagesCustomerServersIndexRoute
  '/$lang/admin/os/$osId/update': typeof LangPanelpagesAdminOsOsIdUpdateRoute
  '/$lang/customer/servers/$serverId/backup': typeof LangPanelpagesCustomerServersServerIdBackupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$lang': typeof LangRouteRouteWithChildren
  '/$lang/_auth': typeof LangAuthRouteRouteWithChildren
  '/$lang/_panel': typeof LangPanelRouteRouteWithChildren
  '/$lang/': typeof LangIndexRoute
  '/$lang/_auth/(pages)/forget-password': typeof LangAuthpagesForgetPasswordRoute
  '/$lang/_auth/(pages)/oauth': typeof LangAuthpagesOauthRoute
  '/$lang/_auth/(pages)/reset-password': typeof LangAuthpagesResetPasswordRoute
  '/$lang/_auth/(pages)/sign-in': typeof LangAuthpagesSignInRoute
  '/$lang/_auth/(pages)/sign-up': typeof LangAuthpagesSignUpRoute
  '/$lang/_auth/(pages)/activate-account/$token': typeof LangAuthpagesActivateAccountTokenRoute
  '/$lang/_panel/(pages)/customer/dashboard': typeof LangPanelpagesCustomerDashboardRoute
  '/$lang/_panel/(pages)/admin/os/create': typeof LangPanelpagesAdminOsCreateRoute
  '/$lang/_panel/(pages)/customer/profile/billings': typeof LangPanelpagesCustomerProfileBillingsRoute
  '/$lang/_panel/(pages)/customer/profile/receipts': typeof LangPanelpagesCustomerProfileReceiptsRoute
  '/$lang/_panel/(pages)/admin/os/': typeof LangPanelpagesAdminOsIndexRoute
  '/$lang/_panel/(pages)/customer/profile/': typeof LangPanelpagesCustomerProfileIndexRoute
  '/$lang/_panel/(pages)/customer/servers/': typeof LangPanelpagesCustomerServersIndexRoute
  '/$lang/_panel/(pages)/admin/os/$osId/update': typeof LangPanelpagesAdminOsOsIdUpdateRoute
  '/$lang/_panel/(pages)/customer/servers/$serverId/backup': typeof LangPanelpagesCustomerServersServerIdBackupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$lang'
    | '/$lang/'
    | '/$lang/forget-password'
    | '/$lang/oauth'
    | '/$lang/reset-password'
    | '/$lang/sign-in'
    | '/$lang/sign-up'
    | '/$lang/activate-account/$token'
    | '/$lang/customer/dashboard'
    | '/$lang/admin/os/create'
    | '/$lang/customer/profile/billings'
    | '/$lang/customer/profile/receipts'
    | '/$lang/admin/os'
    | '/$lang/customer/profile'
    | '/$lang/customer/servers'
    | '/$lang/admin/os/$osId/update'
    | '/$lang/customer/servers/$serverId/backup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$lang'
    | '/$lang/forget-password'
    | '/$lang/oauth'
    | '/$lang/reset-password'
    | '/$lang/sign-in'
    | '/$lang/sign-up'
    | '/$lang/activate-account/$token'
    | '/$lang/customer/dashboard'
    | '/$lang/admin/os/create'
    | '/$lang/customer/profile/billings'
    | '/$lang/customer/profile/receipts'
    | '/$lang/admin/os'
    | '/$lang/customer/profile'
    | '/$lang/customer/servers'
    | '/$lang/admin/os/$osId/update'
    | '/$lang/customer/servers/$serverId/backup'
  id:
    | '__root__'
    | '/'
    | '/$lang'
    | '/$lang/_auth'
    | '/$lang/_panel'
    | '/$lang/'
    | '/$lang/_auth/(pages)/forget-password'
    | '/$lang/_auth/(pages)/oauth'
    | '/$lang/_auth/(pages)/reset-password'
    | '/$lang/_auth/(pages)/sign-in'
    | '/$lang/_auth/(pages)/sign-up'
    | '/$lang/_auth/(pages)/activate-account/$token'
    | '/$lang/_panel/(pages)/customer/dashboard'
    | '/$lang/_panel/(pages)/admin/os/create'
    | '/$lang/_panel/(pages)/customer/profile/billings'
    | '/$lang/_panel/(pages)/customer/profile/receipts'
    | '/$lang/_panel/(pages)/admin/os/'
    | '/$lang/_panel/(pages)/customer/profile/'
    | '/$lang/_panel/(pages)/customer/servers/'
    | '/$lang/_panel/(pages)/admin/os/$osId/update'
    | '/$lang/_panel/(pages)/customer/servers/$serverId/backup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LangRouteRoute: typeof LangRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$lang': {
      id: '/$lang'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$lang/': {
      id: '/$lang/'
      path: '/'
      fullPath: '/$lang/'
      preLoaderRoute: typeof LangIndexRouteImport
      parentRoute: typeof LangRouteRoute
    }
    '/$lang/_panel': {
      id: '/$lang/_panel'
      path: ''
      fullPath: '/$lang'
      preLoaderRoute: typeof LangPanelRouteRouteImport
      parentRoute: typeof LangRouteRoute
    }
    '/$lang/_auth': {
      id: '/$lang/_auth'
      path: ''
      fullPath: '/$lang'
      preLoaderRoute: typeof LangAuthRouteRouteImport
      parentRoute: typeof LangRouteRoute
    }
    '/$lang/_auth/(pages)/sign-up': {
      id: '/$lang/_auth/(pages)/sign-up'
      path: '/sign-up'
      fullPath: '/$lang/sign-up'
      preLoaderRoute: typeof LangAuthpagesSignUpRouteImport
      parentRoute: typeof LangAuthRouteRoute
    }
    '/$lang/_auth/(pages)/sign-in': {
      id: '/$lang/_auth/(pages)/sign-in'
      path: '/sign-in'
      fullPath: '/$lang/sign-in'
      preLoaderRoute: typeof LangAuthpagesSignInRouteImport
      parentRoute: typeof LangAuthRouteRoute
    }
    '/$lang/_auth/(pages)/reset-password': {
      id: '/$lang/_auth/(pages)/reset-password'
      path: '/reset-password'
      fullPath: '/$lang/reset-password'
      preLoaderRoute: typeof LangAuthpagesResetPasswordRouteImport
      parentRoute: typeof LangAuthRouteRoute
    }
    '/$lang/_auth/(pages)/oauth': {
      id: '/$lang/_auth/(pages)/oauth'
      path: '/oauth'
      fullPath: '/$lang/oauth'
      preLoaderRoute: typeof LangAuthpagesOauthRouteImport
      parentRoute: typeof LangAuthRouteRoute
    }
    '/$lang/_auth/(pages)/forget-password': {
      id: '/$lang/_auth/(pages)/forget-password'
      path: '/forget-password'
      fullPath: '/$lang/forget-password'
      preLoaderRoute: typeof LangAuthpagesForgetPasswordRouteImport
      parentRoute: typeof LangAuthRouteRoute
    }
    '/$lang/_panel/(pages)/customer/dashboard': {
      id: '/$lang/_panel/(pages)/customer/dashboard'
      path: '/customer/dashboard'
      fullPath: '/$lang/customer/dashboard'
      preLoaderRoute: typeof LangPanelpagesCustomerDashboardRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_auth/(pages)/activate-account/$token': {
      id: '/$lang/_auth/(pages)/activate-account/$token'
      path: '/activate-account/$token'
      fullPath: '/$lang/activate-account/$token'
      preLoaderRoute: typeof LangAuthpagesActivateAccountTokenRouteImport
      parentRoute: typeof LangAuthRouteRoute
    }
    '/$lang/_panel/(pages)/customer/servers/': {
      id: '/$lang/_panel/(pages)/customer/servers/'
      path: '/customer/servers'
      fullPath: '/$lang/customer/servers'
      preLoaderRoute: typeof LangPanelpagesCustomerServersIndexRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_panel/(pages)/customer/profile/': {
      id: '/$lang/_panel/(pages)/customer/profile/'
      path: '/customer/profile'
      fullPath: '/$lang/customer/profile'
      preLoaderRoute: typeof LangPanelpagesCustomerProfileIndexRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_panel/(pages)/admin/os/': {
      id: '/$lang/_panel/(pages)/admin/os/'
      path: '/admin/os'
      fullPath: '/$lang/admin/os'
      preLoaderRoute: typeof LangPanelpagesAdminOsIndexRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_panel/(pages)/customer/profile/receipts': {
      id: '/$lang/_panel/(pages)/customer/profile/receipts'
      path: '/customer/profile/receipts'
      fullPath: '/$lang/customer/profile/receipts'
      preLoaderRoute: typeof LangPanelpagesCustomerProfileReceiptsRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_panel/(pages)/customer/profile/billings': {
      id: '/$lang/_panel/(pages)/customer/profile/billings'
      path: '/customer/profile/billings'
      fullPath: '/$lang/customer/profile/billings'
      preLoaderRoute: typeof LangPanelpagesCustomerProfileBillingsRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_panel/(pages)/admin/os/create': {
      id: '/$lang/_panel/(pages)/admin/os/create'
      path: '/admin/os/create'
      fullPath: '/$lang/admin/os/create'
      preLoaderRoute: typeof LangPanelpagesAdminOsCreateRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_panel/(pages)/customer/servers/$serverId/backup': {
      id: '/$lang/_panel/(pages)/customer/servers/$serverId/backup'
      path: '/customer/servers/$serverId/backup'
      fullPath: '/$lang/customer/servers/$serverId/backup'
      preLoaderRoute: typeof LangPanelpagesCustomerServersServerIdBackupRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
    '/$lang/_panel/(pages)/admin/os/$osId/update': {
      id: '/$lang/_panel/(pages)/admin/os/$osId/update'
      path: '/admin/os/$osId/update'
      fullPath: '/$lang/admin/os/$osId/update'
      preLoaderRoute: typeof LangPanelpagesAdminOsOsIdUpdateRouteImport
      parentRoute: typeof LangPanelRouteRoute
    }
  }
}

interface LangAuthRouteRouteChildren {
  LangAuthpagesForgetPasswordRoute: typeof LangAuthpagesForgetPasswordRoute
  LangAuthpagesOauthRoute: typeof LangAuthpagesOauthRoute
  LangAuthpagesResetPasswordRoute: typeof LangAuthpagesResetPasswordRoute
  LangAuthpagesSignInRoute: typeof LangAuthpagesSignInRoute
  LangAuthpagesSignUpRoute: typeof LangAuthpagesSignUpRoute
  LangAuthpagesActivateAccountTokenRoute: typeof LangAuthpagesActivateAccountTokenRoute
}

const LangAuthRouteRouteChildren: LangAuthRouteRouteChildren = {
  LangAuthpagesForgetPasswordRoute: LangAuthpagesForgetPasswordRoute,
  LangAuthpagesOauthRoute: LangAuthpagesOauthRoute,
  LangAuthpagesResetPasswordRoute: LangAuthpagesResetPasswordRoute,
  LangAuthpagesSignInRoute: LangAuthpagesSignInRoute,
  LangAuthpagesSignUpRoute: LangAuthpagesSignUpRoute,
  LangAuthpagesActivateAccountTokenRoute:
    LangAuthpagesActivateAccountTokenRoute,
}

const LangAuthRouteRouteWithChildren = LangAuthRouteRoute._addFileChildren(
  LangAuthRouteRouteChildren,
)

interface LangPanelRouteRouteChildren {
  LangPanelpagesCustomerDashboardRoute: typeof LangPanelpagesCustomerDashboardRoute
  LangPanelpagesAdminOsCreateRoute: typeof LangPanelpagesAdminOsCreateRoute
  LangPanelpagesCustomerProfileBillingsRoute: typeof LangPanelpagesCustomerProfileBillingsRoute
  LangPanelpagesCustomerProfileReceiptsRoute: typeof LangPanelpagesCustomerProfileReceiptsRoute
  LangPanelpagesAdminOsIndexRoute: typeof LangPanelpagesAdminOsIndexRoute
  LangPanelpagesCustomerProfileIndexRoute: typeof LangPanelpagesCustomerProfileIndexRoute
  LangPanelpagesCustomerServersIndexRoute: typeof LangPanelpagesCustomerServersIndexRoute
  LangPanelpagesAdminOsOsIdUpdateRoute: typeof LangPanelpagesAdminOsOsIdUpdateRoute
  LangPanelpagesCustomerServersServerIdBackupRoute: typeof LangPanelpagesCustomerServersServerIdBackupRoute
}

const LangPanelRouteRouteChildren: LangPanelRouteRouteChildren = {
  LangPanelpagesCustomerDashboardRoute: LangPanelpagesCustomerDashboardRoute,
  LangPanelpagesAdminOsCreateRoute: LangPanelpagesAdminOsCreateRoute,
  LangPanelpagesCustomerProfileBillingsRoute:
    LangPanelpagesCustomerProfileBillingsRoute,
  LangPanelpagesCustomerProfileReceiptsRoute:
    LangPanelpagesCustomerProfileReceiptsRoute,
  LangPanelpagesAdminOsIndexRoute: LangPanelpagesAdminOsIndexRoute,
  LangPanelpagesCustomerProfileIndexRoute:
    LangPanelpagesCustomerProfileIndexRoute,
  LangPanelpagesCustomerServersIndexRoute:
    LangPanelpagesCustomerServersIndexRoute,
  LangPanelpagesAdminOsOsIdUpdateRoute: LangPanelpagesAdminOsOsIdUpdateRoute,
  LangPanelpagesCustomerServersServerIdBackupRoute:
    LangPanelpagesCustomerServersServerIdBackupRoute,
}

const LangPanelRouteRouteWithChildren = LangPanelRouteRoute._addFileChildren(
  LangPanelRouteRouteChildren,
)

interface LangRouteRouteChildren {
  LangAuthRouteRoute: typeof LangAuthRouteRouteWithChildren
  LangPanelRouteRoute: typeof LangPanelRouteRouteWithChildren
  LangIndexRoute: typeof LangIndexRoute
}

const LangRouteRouteChildren: LangRouteRouteChildren = {
  LangAuthRouteRoute: LangAuthRouteRouteWithChildren,
  LangPanelRouteRoute: LangPanelRouteRouteWithChildren,
  LangIndexRoute: LangIndexRoute,
}

const LangRouteRouteWithChildren = LangRouteRoute._addFileChildren(
  LangRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LangRouteRoute: LangRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
